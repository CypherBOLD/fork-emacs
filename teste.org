* Conhecendo o GNU Emacs

Este repositório contém o material utilizado na minha série de vídeos *Conhecendo o GNU Emacs* além das minhas configurações atuais e alguns /"agradinhos"/ para quem quer aprender mais sobre o GNU Emacs.

** Vídeos publicados

- [[https://youtu.be/oNmbldRJqZM][GNU Emacs #0 - Primeiros passos]]
- [[https://youtu.be/0Le151jS57o][GNU Emacs #1 - Configurações básicas da interface]]
- [[https://youtu.be/UCJwchTEWeU][GNU Emacs #2 - Configurando e expandindo o Emacs]]

** Cartão de consulta rápida (em desenvolvimento)

- [[pic/emacs-card.pdf][PDF]]
- [[pic/emacs-card.svg][Fonte em SVG]]

** Para apoiar o meu trabalho

- Doações via PIX: pix@blauaraujo.com
- [[https://app.picpay.com/user/blauaraujo][Doações pelo PicPay]]
- [[https://apoia.se/debxpcursos][Apoio regular pelo Apoia.se]]

** Meu init.el

*** Configurações gerais

A maioria dessas configurações altera a interface padrão do Emacs. Os objetivos são:

- Desabilitar o buffer de boas-vindas
- Ativar a sinalização visual para operações inválidas com mouse e teclado.
- Redefinir o tamanho da lista do histórico para 20 entradas.
- Desativar a exibição de janelas de diálogo.
- Também atualizar buffers que não são arquivos quando modificados externamente.
- Ativar o uso de tabulação para completar símbolos quando o cursor não estiver no início da linha.
- Suavizar a rolagem com o mouse para 2 linhas de velocidade.
- Desativar a aceleração do mouse.
- Ativar o efeito de atuação do mouse sobre janelas que não estão selecionadas.
- Definir a rolagem com o teclado para apenas uma linha.

Todas essas definições são feitas alterando valores de variáveis. Para saber mais sobre cada uma delas, no Emacs, posicione o cursor sobre o nome da variável e tecle =C-h o=.

#+begin_src emacs-lisp
  ;; Variables
  (setq inhibit-startup-message t                    ; no welcome buffer
        visible-bell t                               ; blinks at cursor limits
        history-length 20                            ; max history saves
        use-dialog-box nil                           ; no ugly dialogs
        global-auto-revert-non-file-buffers t        ; update buffers thar are non-files too
        tab-always-indent 'complete                  ; use TAB to complete symbols
        mouse-wheel-scroll-amount '(2 ((shift) . 1)) ; scroll 2 lines
        mouse-wheel-progressive-speed nil            ; don't accelerate
        mouse-wheel-follow-mouse 't                  ; scroll window under mouse cursor
        scroll-step 1)                               ; scroll 1 line with keyboard
#+end_src

*** Ativação de modos

Os *modos* são extensões que alteram as funcionalidades do Emacs. Eles podem ser ativados no nosso =init.el= ou de forma interativa pelo atalho =M-x=. Alguns, já fazem parte de uma instalação padrão do Emacs, enquanto outros dependem da instalação de pacotes.

Nesta configuração, nós iremos:

- Desabilitar o modo que exibe o menu da interface gráfica.
- Desabilitar a barra de ferramentas.
- Desabilitar as barras de rolagem.
- Alterar as margens laterais da interface para 10 pixels.
- Exibir a posição horizontal do cursor (coluna) na /modeline/ (a barra de status, abaixo da janela).
- Ativar o registro de arquivos recentemente abertos.
- Ativar o registro da última posição do cursor quando o arquivo é fechado.
- Ativar o registro do histórico.
- Alterar o comportamento da inserção de texto para que as seleções sejam apagadas quando algo for digitado.
- Ativar o destaque da linha atual.
- Alterar as quebras de linha para o modo visual.
- Ativar globalmente a atualização de buffers abertos quando os mesmos arquivos forem alterados externamente.
- Ativar a exibição global da numeração das linhas.

#+begin_src emacs-lisp
  ;; Modes
  (menu-bar-mode -1)                      ; no menu bar
  (tool-bar-mode -1)                      ; no tools bar
  (scroll-bar-mode -1)                    ; no scroll bars
  (set-fringe-mode 10)                    ; frame edges set to 10px
  (column-number-mode 1)                  ; show current column in modeline
  (recentf-mode 1)                        ; remember recent files
  (save-place-mode 1)                     ; remember cursor position
  (savehist-mode 1)                       ; enable history saving
  (delete-selection-mode t)               ; overwrite selected text when typing
  (global-hl-line-mode 1)                 ; enable current line highlight
  (global-visual-line-mode t)             ; visual line breaking
  (global-auto-revert-mode 1)             ; update externaly edited files
  (global-display-line-numbers-mode 1)    ; always show line numbers
#+end_src  

*** Utilizar espaços em vez de tabulações

#+begin_src emacs-lisp
  ;; Use spaces instead of tabs
  (setq-default indent-tabs-mode nil)
#+end_src

*** Habilitar a verificação ortográfica

A verificação ortográfica (pacote /builtn/ =flyspell=), além de pesar no processamento, pode tornar a edição de códigos um pouco poluída visualmente. Por isso, nós vamos condicionar a ativação deste modo à abertura de arquivos de texto (=text-mode=). Isso é feito através de /hooks/ (ganchos) que são lançados quando o Emacs detecta que um novo modo foi iniciado.

#+begin_src emacs-lisp
  ;; Enable flyspell for text-mode buffers
  (dolist (hook '(text-mode-hook))
    (add-hook hook (lambda () (flyspell-mode 1))))
#+end_src

*** Desabilitar o atalho 'C-z'

O atalho =C-z= faz com que o processo do Emacs seja mandado para execução em segundo plano (/background/), o que causa alguns transtornos. Além disso, esta é uma boa combinação de teclas para uso como prefixo de ações personalizadas.

#+begin_src elisp-mode
  ;; Disable C-z
  (global-unset-key (kbd "C-z"))
#+end_src

*** Selecionar novas janelas quando criadas

Supondo que, quase sempre, quando criamos uma nova janela nós queremos utilizá-la, esta configuração pode ser uma boa ideia.

#+begin_src emacs-lisp
  ;; Activate new window
  (global-set-key "\C-x2" (lambda ()
                (interactive)
                (split-window-vertically) (other-window 1)))
  (global-set-key "\C-x3" (lambda ()
                (interactive)
                (split-window-horizontally) (other-window 1)))
#+end_src

